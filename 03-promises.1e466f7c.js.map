{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CApCAQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBACF,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAEK,cAAcC,SAEhD,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAOI,MAAOD,GAAG,EAAG,CACvC,MAAME,EAAWF,EACXG,EAAeC,SAAST,EAAMM,QAAUD,EAAI,GAAKI,SAASR,EAAKK,OAErE,GAAIG,SAAST,EAAMM,OAAS,GAAKG,SAASR,EAAKK,OAAS,GAAKG,SAASP,EAAOI,QAAU,EAEvF,YADAI,EAAA3B,GAAS4B,OAAOC,QAAQ,6DAIxB3B,EAAcsB,EAAUC,GACrBK,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBuB,EAAA3B,GAAS4B,OAAOG,QAAQ,qBAAqB5B,QAAeC,MAAU,IAEvE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBuB,EAAA3B,GAAS4B,OAAOC,QAAQ,oBAAoB1B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  for (let i = 1; i <= amount.value; i+=1) {\n    const position = i;\n    const promiseDelay = parseInt(delay.value) + (i - 1) * parseInt(step.value);\n\n    if (parseInt(delay.value) < 0 || parseInt(step.value) < 0 || parseInt(amount.value) <= 0) {\n    Notiflix.Notify.failure('Please enter positive values for delay, step, and amount.');\n    return;\n    }\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","delay1","step","amount","currentTarget","elements","i","value","position1","promiseDelay","parseInt","$parcel$interopDefault","Notify","failure","then","success","catch"],"version":3,"file":"03-promises.1e466f7c.js.map"}