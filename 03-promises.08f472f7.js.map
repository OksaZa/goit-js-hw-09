{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IApCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAEC,iBAGF,IAFA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OAEZC,EAAI,EAAGA,GAAKD,EAAOE,MAAOD,GAAG,EAAG,CACvC,IAAME,EAAWF,EACXG,EAAeC,SAASP,EAAMI,QAAUD,EAAI,GAAKI,SAASN,EAAKG,OAErE,GAAIG,SAASP,EAAMI,OAAS,GAAKG,SAASN,EAAKG,OAAS,GAAKG,SAASL,EAAOE,QAAU,EAEvF,YADAI,EAAA5B,GAAS6B,OAAOC,QAAQ,6DAIxB5B,EAAcuB,EAAUC,GACrBK,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjBwB,EAAA5B,GAAS6B,OAAOI,QAAQ,qBAAoCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M,IAEnE+B,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,oBAAmCI,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n\n  for (let i = 1; i <= amount.value; i+=1) {\n    const position = i;\n    const promiseDelay = parseInt(delay.value) + (i - 1) * parseInt(step.value);\n\n    if (parseInt(delay.value) < 0 || parseInt(step.value) < 0 || parseInt(amount.value) <= 0) {\n    Notiflix.Notify.failure('Please enter positive values for delay, step, and amount.');\n    return;\n    }\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","i","value","position1","promiseDelay","parseInt","$parcel$interopDefault","Notify","failure","then","param","success","concat","catch"],"version":3,"file":"03-promises.08f472f7.js.map"}